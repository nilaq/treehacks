/* eslint-disable @typescript-eslint/no-misused-promises */
import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";
import { Gender } from ".prisma/client";
import { SubmitHandler } from "react-hook-form";
import { useForm } from "react-hook-form";

interface Inputs {
  firstName: string;
  lastName: string;
  email: string;
  gender: Gender;
}

const Home: NextPage = () => {
  const { register, handleSubmit } = useForm<Inputs>();

  const { mutate: createCandidate, isLoading } =
    api.candidate.create.useMutation();

  const { data: candidates } = api.candidate.getAll.useQuery();

  const onSubmit: SubmitHandler<Inputs> = ({
    firstName,
    lastName,
    email,
    gender,
  }) => {
    createCandidate({ firstName, lastName, email, gender });
    return null;
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen w-screen flex-col items-center justify-center bg-zinc-50 bg-zinc-600">
        <form onSubmit={handleSubmit(onSubmit)} className="flex flex-col gap-2">
          <label>First Name</label>
          <input
            type="text"
            {...register("firstName", { required: "A first name is required" })}
          />
          <label>Last Name</label>
          <input
            type="text"
            {...register("lastName", { required: "A first name is required" })}
          />
          <label>Email</label>
          <input
            type="text"
            {...register("email", { required: "A first name is required" })}
          />
          <label>Gender</label>
          <select {...register("gender")}>
            {Object.values(Gender).map((g) => (
              <option key={g} value={g}>
                {g}
              </option>
            ))}
          </select>
          <button type="submit" className="rounded bg-black p-2 text-white">
            {isLoading ? "Loading..." : "Add Candidate"}
          </button>
        </form>
      </main>
    </>
  );
};

export default Home;
